set icmdb "verbose" 1
s = 'password'
connect icmdb 'administrator' s

Delete these from jcmol_moltable.sdf:
BVT016996C


load icmdb mol "chem.sdf" "Databases/localhost" "chem_reg" "BeeHive/chem_reg"
load icmdb mol "/home/mats.dahlberg/scarab_data/scarab_tornado/tools/jcsmol_moltable.sdf" "Databases/localhost" "bcpvs" "BeeHive/Compound"

#####################################
## Reset chem_reg database

delete from chem_reg.CHEM_MOL_keysim;
delete from chem_reg.CHEM_MOL_key;
delete from chem_reg.CHEM_MOL;
delete from chem_reg.CHEM;
delete from chem_reg.chem_info;
delete from chem_reg.salts where suffix like 'X%';
update chem_reg.salts_sequence set pkey = 1;
update chem_reg.regno_sequence set pkey = 2000000;
update bcpvs.library_id_sequence set pkey = 3000;

update bcpvs.compound_id_sequence set pkey = 600000;
ALTER TABLE bcpvs.JCMOL_MOLTABLE ADD FOREIGN KEY (compound_id) REFERENCES bcpvs.compound(compound_id);


## Update test databases
update chem_reg_test.salts_sequence set pkey = 1;
update chem_reg_test.regno_sequence set pkey = 2000000;
update bcpvs_test.library_id_sequence set pkey = 3000;
update bcpvs_test.compound_id_sequence set pkey = 600000;


insert into chem_reg_test.salts_sequence select * from chem_reg.salts_sequence;
insert into chem_reg_test.sdfile_sequence select * from chem_reg.sdfile_sequence;
insert into chem_reg_test.regno_sequence select * from chem_reg.regno_sequence;
insert into bcpvs_test.compound_type select * from bcpvs.compound_type;
insert into bcpvs_test.compound_id_sequence select * from bcpvs.compound_id_sequence;
insert into bcpvs_test.compound_suppliers select * from bcpvs.compound_suppliers;
insert into bcpvs_test.compound_library select * from bcpvs.compound_library;
insert into bcpvs_test.product_type select * from bcpvs.product_type;
insert into bcpvs_test.library_id_sequence select * from bcpvs.library_id_sequence;

#####################################

delete icmdb tree="BeeHive/Compound Center/Matrix/matrix"
load icmdb database "Databases/localhost" "microtube" table={"matrix"} "BeeHive/Compound Center/Matrix"
load icmdb database "Databases/localhost" "microtube" table={"matrix_position"} "BeeHive/Compound Center/Matrix"
load icmdb database "Databases/localhost" "microtube" table={"matrix_tube"} "BeeHive/Compound Center/Matrix"
load icmdb database "Databases/localhost" "microtube" table={"tube"} "BeeHive/Compound Center/Matrix"


load icmdb database "Databases/localhost" "bcpvs" table={"compound"} "BeeHive/Compound" gui
load icmdb database "Databases/localhost" "chem_reg" table={"chem_info_mol"} "BeeHive/chem_reg" gui
load icmdb database "Databases/localhost" "chem_reg" table={"chem_info_mol_key"} "BeeHive/chem_reg" gui
load icmdb database "Databases/localhost" "chem_reg" table={"chem_info_mol_ukey"} "BeeHive/chem_reg" gui




CREATE TABLE `JCMOL_MOLTABLE` (
  `MOL` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `COMPOUND_ID` varchar(26) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  UNIQUE KEY `JCMOL_MOLTABLE_ind` (`COMPOUND_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


CREATE TABLE `JCMOL_MOLTABLE_MOL` (
  `COMPOUND_ID` varchar(26) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `mol` mediumblob,
  UNIQUE KEY `JCMOL_MOLTABLE_MOL_ind` (`COMPOUND_ID`),
  CONSTRAINT `JCMOL_MOLTABLE_MOL_FK` FOREIGN KEY (`COMPOUND_ID`) REFERENCES `JCMOL_MOLTABLE` (`COMPOUND_ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


CREATE TABLE `JCMOL_MOLTABLE_MOL_key` (
  `COMPOUND_ID` varchar(26) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `molkey` binary(192) DEFAULT NULL,
  UNIQUE KEY `JCMOL_MOLTABLE_MOL_key_ind` (`COMPOUND_ID`),
  KEY `JCMOL_MOLTABLE_MOL_key_ind_0` (`molkey`),
  CONSTRAINT `JCMOL_MOLTABLE_MOL_key_FK` FOREIGN KEY (`COMPOUND_ID`) REFERENCES `JCMOL_MOLTABLE_MOL` (`COMPOUND_ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


CREATE TABLE `JCMOL_MOLTABLE_MOL_keysim` (
  `COMPOUND_ID` varchar(26) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `molkey` binary(192) DEFAULT NULL,
  UNIQUE KEY `JCMOL_MOLTABLE_MOL_keysim_ind` (`COMPOUND_ID`),
  CONSTRAINT `JCMOL_MOLTABLE_MOL_keysim_FK` FOREIGN KEY (`COMPOUND_ID`) REFERENCES `JCMOL_MOLTABLE_MOL` (`COMPOUND_ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


JCMOL_MOLTABLE
JCMOL_MOLTABLE_MOL
JCMOL_MOLTABLE_MOL_key
JCMOL_MOLTABLE_MOL_keysim


ALTER TABLE JCMOL_MOLTABLE_MOL DROP FOREIGN KEY JCMOL_MOLTABLE_MOL_FK;
ALTER TABLE JCMOL_MOLTABLE_MOL_key DROP FOREIGN KEY JCMOL_MOLTABLE_MOL_key_FK;
ALTER TABLE JCMOL_MOLTABLE_MOL_keysim DROP FOREIGN KEY JCMOL_MOLTABLE_MOL_keysim_FK;


ALTER TABLE bcpvs.JCMOL_MOLTABLE Modify column COMPOUND_ID varchar(26);
ALTER TABLE bcpvs.JCMOL_MOLTABLE_MOL Modify column COMPOUND_ID varchar(26);
ALTER TABLE bcpvs.JCMOL_MOLTABLE_MOL_key Modify column COMPOUND_ID varchar(26);
ALTER TABLE bcpvs.JCMOL_MOLTABLE_MOL_keysim Modify column COMPOUND_ID varchar(26);


ALTER TABLE bcpvs.JCMOL_MOLTABLE add FOREIGN KEY (COMPOUND_ID) REFERENCES bcpvs.compound(compound_id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE bcpvs.JCMOL_MOLTABLE_MOL add FOREIGN KEY (COMPOUND_ID) REFERENCES bcpvs.JCMOL_MOLTABLE(compound_id);
ALTER TABLE bcpvs.JCMOL_MOLTABLE_MOL_key add FOREIGN KEY (COMPOUND_ID) REFERENCES bcpvs.JCMOL_MOLTABLE_MOL(compound_id);
ALTER TABLE bcpvs.JCMOL_MOLTABLE_MOL_keysim add FOREIGN KEY (COMPOUND_ID) REFERENCES bcpvs.JCMOL_MOLTABLE_MOL(compound_id);




CREATE TABLE `JCMOL_MOLTABLE` (
  `MOL` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `COMPOUND_ID` varchar(16) DEFAULT NULL,
  UNIQUE KEY `JCMOL_MOLTABLE_ind` (`COMPOUND_ID`),
  CONSTRAINT `JCMOL_MOLTABLE_ibfk_1` FOREIGN KEY (`COMPOUND_ID`) REFERENCES `compound` (`compound_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
